{% extends 'base.html.twig' %}

{% block title %}VM {{ vm.vmid }}{% endblock %}

{% block stylesheets %}
    <style>
        /* Container principal */
        .vm-details-wrapper {
            max-width: 1400px;
            width: 100%;
            margin: 0 auto;
        }
        
        .vm-details-wrapper *,
        .vm-details-wrapper *::before,
        .vm-details-wrapper *::after {
            box-sizing: border-box;
        }

        /* Loading state */
        .loading {
            text-align: center;
            padding: 3rem;
            color: var(--text-secondary);
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            margin: 0 auto 1rem;
            border: 3px solid var(--gray-200);
            border-top-color: var(--primary-600);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Back button */
        .back-link {
            display: inline-flex;
            align-items: center;
            gap: 0.375rem;
            margin-bottom: 1rem;
            color: var(--primary-600);
            text-decoration: none;
            font-weight: 600;
            padding: 0.375rem 0.5rem;
            border-radius: 6px;
            transition: all 0.2s;
            font-size: 0.8125rem;
        }

        .back-link:hover {
            color: var(--primary-700);
            background: var(--primary-50);
        }

        /* VM Info Card */
        .vm-info-card {
            background: linear-gradient(135deg, var(--primary-600) 0%, var(--primary-800) 100%);
            color: white;
            padding: 1.25rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            box-shadow: var(--shadow-md);
            width: 100%;
            max-width: 100%;
        }

        .vm-info-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }

        .vm-info-title h1 {
            margin: 0;
            font-size: 1.5rem;
            font-weight: 700;
        }

        .vm-status-badge {
            padding: 0.375rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
        }

        .vm-status-badge.running {
            background: rgba(16, 185, 129, 0.9);
        }

        .vm-status-badge.stopped {
            background: rgba(239, 68, 68, 0.9);
        }

        .vm-specs {
            display: grid;
            grid-template-columns: repeat(4, minmax(0, 1fr));
            gap: 0.75rem;
            max-width: 100%;
        }

        .vm-spec-item {
            background: rgba(255, 255, 255, 0.1);
            padding: 0.75rem;
            border-radius: 6px;
            backdrop-filter: blur(10px);
            min-width: 0;
        }

        .vm-spec-label {
            font-size: 0.625rem;
            opacity: 0.8;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            margin-bottom: 0.25rem;
        }

        .vm-spec-value {
            font-size: 0.9375rem;
            font-weight: 700;
        }

        /* Tabs */
        .tabs-container {
            background: white;
            border-radius: 8px;
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--border-color);
            width: 100%;
            max-width: 100%;
        }

        .tab-nav {
            display: flex;
            background: var(--gray-50);
            border-bottom: 2px solid var(--border-color);
            overflow-x: auto;
        }

        .tab-btn {
            flex: 1;
            min-width: 100px;
            padding: 0.75rem 1rem;
            background: none;
            border: none;
            border-bottom: 3px solid transparent;
            color: var(--text-secondary);
            font-size: 0.8125rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s;
        }

        .tab-btn:hover {
            background: white;
            color: var(--text-primary);
        }

        .tab-btn.active {
            background: white;
            color: var(--primary-600);
            border-bottom-color: var(--primary-600);
        }

        .tab-content-wrapper {
            padding: 1rem;
            width: 100%;
            max-width: 100%;
        }

        .tab-pane {
            display: none;
            width: 100%;
            max-width: 100%;
        }

        .tab-pane.active {
            display: block;
        }

        /* Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(4, minmax(0, 1fr));
            gap: 0.75rem;
            margin-bottom: 1rem;
        }

        .stat-card {
            background: var(--gray-50);
            padding: 0.875rem;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            text-align: center;
            min-width: 0;
        }

        .stat-icon {
            font-size: 1.375rem;
            margin-bottom: 0.375rem;
        }

        .stat-label {
            font-size: 0.625rem;
            color: var(--text-secondary);
            text-transform: uppercase;
            margin-bottom: 0.25rem;
        }

        .stat-value {
            font-size: 1.375rem;
            font-weight: 700;
            color: var(--text-primary);
        }

        .stat-unit {
            font-size: 0.6875rem;
            color: var(--text-tertiary);
        }

        /* Mini charts */
        .mini-charts {
            display: grid;
            grid-template-columns: repeat(2, minmax(0, 1fr));
            gap: 0.75rem;
        }

        .mini-chart {
            background: white;
            padding: 0.75rem;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            min-width: 0;
        }

        .mini-chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.5rem;
        }

        .mini-chart-title {
            font-size: 0.6875rem;
            font-weight: 700;
            color: var(--text-primary);
            text-transform: uppercase;
        }

        .mini-chart-value {
            font-size: 1.125rem;
            font-weight: 700;
        }

        .chart-canvas-wrapper {
            position: relative;
            height: 80px;
            width: 100%;
        }

        .mini-chart canvas {
            position: absolute !important;
            top: 0;
            left: 0;
            width: 100% !important;
            height: 100% !important;
        }

        /* Console */
        .console-wrapper {
            background: var(--gray-900);
            border-radius: 8px;
            border: 1px solid var(--gray-700);
            width: 100%;
        }

        .console-toolbar {
            background: var(--gray-800);
            padding: 0.5rem;
            border-bottom: 1px solid var(--gray-700);
            display: flex;
            gap: 0.5rem;
        }

        .console-toolbar button {
            background: var(--gray-700);
            border: none;
            color: white;
            padding: 0.375rem 0.75rem;
            border-radius: 4px;
            font-size: 0.6875rem;
            cursor: pointer;
        }

        .console-screen {
            padding: 1rem;
            height: 200px;
            overflow-y: auto;
            background: var(--gray-900);
            color: #4ade80;
            font-family: 'Consolas', monospace;
            font-size: 0.75rem;
        }

        /* Tables */
        .compact-table-wrapper {
            width: 100%;
            overflow-x: auto;
        }

        .compact-table {
            width: 100%;
            min-width: 600px;
            border-collapse: collapse;
            font-size: 0.75rem;
        }

        .compact-table thead {
            background: var(--gray-50);
        }

        .compact-table th {
            padding: 0.625rem 0.75rem;
            text-align: left;
            font-size: 0.625rem;
            font-weight: 700;
            text-transform: uppercase;
        }

        .compact-table td {
            padding: 0.625rem 0.75rem;
            border-bottom: 1px solid var(--border-color);
        }

        .compact-table tbody tr:hover {
            background: var(--gray-50);
        }

        /* Badges */
        .badge {
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-size: 0.625rem;
            font-weight: 700;
            white-space: nowrap;
        }

        .badge-info { background: var(--primary-600); color: white; }
        .badge-success { background: var(--success); color: white; }
        .badge-warning { background: var(--warning); color: white; }

        /* Buttons */
        .btn-sm {
            padding: 0.3rem 0.6rem;
            font-size: 0.6875rem;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            transition: all 0.2s;
        }

        .btn-primary {
            background: var(--primary-600);
            color: white;
        }

        .btn-primary:hover {
            background: var(--primary-700);
        }

        .btn-secondary {
            background: var(--gray-200);
            color: var(--text-primary);
        }

        .btn-secondary:hover {
            background: var(--gray-300);
        }

        .btn-danger {
            background: var(--danger-light);
            color: white;
        }

        .btn-danger:hover {
            background: var(--danger);
        }

        .table-actions {
            display: flex;
            gap: 0.375rem;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .vm-specs {
                grid-template-columns: repeat(2, minmax(0, 1fr));
            }

            .stats-grid {
                grid-template-columns: repeat(2, minmax(0, 1fr));
            }

            .mini-charts {
                grid-template-columns: 1fr;
            }

            .compact-table {
                min-width: 500px;
            }
        }

        @media (max-width: 480px) {
            .stats-grid {
                grid-template-columns: repeat(2, minmax(0, 1fr));
            }

            .compact-table {
                min-width: 450px;
            }
        }
    </style>
{% endblock %}

{% block body %}
<div class="vm-details-wrapper">
    <a href="{{ path('app_list_v_ms') }}" class="back-link">← Retour</a>

    <div id="vm-content">
        {# VM Info Card #}
        <div class="vm-info-card">
            <div class="vm-info-header">
                <div class="vm-info-title">
                    <h1>{{ vm.name }}</h1>
                </div>
                <div>
                    <span class="vm-status-badge {{ vm.status }}">
                        {% if vm.status == 'running' %}● En cours{% else %}● Arrêtée{% endif %}
                    </span>
                </div>
            </div>
            <div class="vm-specs">
                <div class="vm-spec-item">
                    <div class="vm-spec-label">Node</div>
                    <div class="vm-spec-value">{{ vm.node }}</div>
                </div>
                <div class="vm-spec-item">
                    <div class="vm-spec-label">CPU</div>
                    <div class="vm-spec-value">{{ vm.cpus }} vCPU</div>
                </div>
                <div class="vm-spec-item">
                    <div class="vm-spec-label">RAM</div>
                    <div class="vm-spec-value">{{ (vm.maxmem / 1024 / 1024 / 1024)|round(1) }} GB</div>
                </div>
                <div class="vm-spec-item">
                    <div class="vm-spec-label">Action</div>
                    <div class="vm-spec-value">
                        {% if vm.status == 'running' %}
                            <button class="btn-sm btn-danger">Arrêter</button>
                        {% else %}
                            <button class="btn-sm btn-primary">Démarrer</button>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>

        {# Tabs #}
        <div class="tabs-container">
            <div class="tab-nav">
                <button class="tab-btn active" data-tab="summary">📊 Résumé</button>
                <button class="tab-btn" data-tab="console">💻 Console</button>
                <button class="tab-btn" data-tab="snapshots">📸 Snapshots</button>
                <button class="tab-btn" data-tab="events">📋 Événements</button>
            </div>

            <div class="tab-content-wrapper">
                {# Tab 1: Summary #}
                <div id="tab-summary" class="tab-pane active">
                    <div class="stats-grid">
                        <div class="stat-card">
                            <div class="stat-icon">🖥️</div>
                            <div class="stat-label">CPU</div>
                            <div class="stat-value">{{ (vm.cpu * 100)|round }}<span class="stat-unit">%</span></div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-icon">💾</div>
                            <div class="stat-label">RAM</div>
                            <div class="stat-value">{{ ((vm.mem / vm.maxmem) * 100)|round }}<span class="stat-unit">%</span></div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-icon">💿</div>
                            <div class="stat-label">Disque</div>
                            <div class="stat-value">{{ ((vm.disk / vm.maxdisk) * 100)|round }}<span class="stat-unit">%</span></div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-icon">⏱️</div>
                            <div class="stat-label">Uptime</div>
                            <div class="stat-value">
                                {% set days = (vm.uptime / 86400)|round(0, 'floor') %}
                                {% set hours = ((vm.uptime % 86400) / 3600)|round(0, 'floor') %}
                                {% set minutes = ((vm.uptime % 3600) / 60)|round(0, 'floor') %}
                                {% if days > 0 %}{{ days }}j {{ hours }}h{% elseif hours > 0 %}{{ hours }}h {{ minutes }}m{% else %}{{ minutes }}m{% endif %}
                            </div>
                        </div>
                    </div>

                    <div class="mini-charts">
                        <div class="mini-chart">
                            <div class="mini-chart-header">
                                <span class="mini-chart-title">CPU (24h)</span>
                                <span class="mini-chart-value" style="color: #10b981;" id="chart-cpu-val">-%</span>
                            </div>
                            <div class="chart-canvas-wrapper">
                                <canvas id="cpuChart"></canvas>
                            </div>
                        </div>
                        <div class="mini-chart">
                            <div class="mini-chart-header">
                                <span class="mini-chart-title">RAM (24h)</span>
                                <span class="mini-chart-value" style="color: #8b5cf6;" id="chart-ram-val">-%</span>
                            </div>
                            <div class="chart-canvas-wrapper">
                                <canvas id="ramChart"></canvas>
                            </div>
                        </div>
                        <div class="mini-chart">
                            <div class="mini-chart-header">
                                <span class="mini-chart-title">Disque (24h)</span>
                                <span class="mini-chart-value" style="color: #f59e0b;" id="chart-disk-val">-%</span>
                            </div>
                            <div class="chart-canvas-wrapper">
                                <canvas id="diskChart"></canvas>
                            </div>
                        </div>
                        <div class="mini-chart">
                            <div class="mini-chart-header">
                                <span class="mini-chart-title">Réseau (24h)</span>
                                <span class="mini-chart-value" style="color: #3b82f6;" id="chart-net-val">- MB/s</span>
                            </div>
                            <div class="chart-canvas-wrapper">
                                <canvas id="networkChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>

                {# Tab 2: Console #}
                <div id="tab-console" class="tab-pane">
                    <div class="console-wrapper">
                        <div class="console-toolbar">
                            <button>Plein écran</button>
                            <button>Ctrl+Alt+Del</button>
                            <button>Redémarrer</button>
                        </div>
                        <div class="console-screen">
                            <p>Console VNC/noVNC sera intégrée ici</p>
                        </div>
                    </div>
                </div>

                {# Tab 3: Snapshots #}
                <div id="tab-snapshots" class="tab-pane">
                    <div style="margin-bottom: 0.75rem;">
                        <button class="btn-sm btn-primary">+ Créer un snapshot</button>
                    </div>
                    <div class="compact-table-wrapper">
                        <table class="compact-table">
                            <thead>
                                <tr>
                                    <th>Nom</th>
                                    <th>Date</th>
                                    <th>Description</th>
                                    <th>Taille</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for snapshot in snapshots %}
                                <tr>
                                    <td><strong>{{ snapshot.name }}</strong></td>
                                    <td>{{ snapshot.snaptime|date('d/m/Y H:i') }}</td>
                                    <td>{{ snapshot.description }}</td>
                                    <td>{{ (snapshot.size / 1024 / 1024 / 1024)|round(2) }} GB</td>
                                    <td>
                                        <div class="table-actions">
                                            <button class="btn-sm btn-secondary">Restaurer</button>
                                        </div>
                                    </td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>

                {# Tab 4: Events #}
                <div id="tab-events" class="tab-pane">
                    <div class="compact-table-wrapper">
                        <table class="compact-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Type</th>
                                    <th>Message</th>
                                    <th>Utilisateur</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for event in events %}
                                <tr>
                                    <td>{{ event.date }}</td>
                                    <td><span class="badge badge-{{ event.type == 'maintenance' ? 'warning' : 'info' }}">{{ event.type }}</span></td>
                                    <td>{{ event.message }}</td>
                                    <td>{{ event.user }}</td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
<script>
// Tab switching
document.addEventListener('DOMContentLoaded', () => {
    const tabBtns = document.querySelectorAll('.tab-btn');
    const tabPanes = document.querySelectorAll('.tab-pane');

    tabBtns.forEach(btn => {
        btn.addEventListener('click', () => {
            const targetTab = btn.dataset.tab;
            
            tabBtns.forEach(b => b.classList.remove('active'));
            tabPanes.forEach(p => p.classList.remove('active'));
            
            btn.classList.add('active');
            document.getElementById(`tab-${targetTab}`).classList.add('active');
        });
    });
});
</script>
{% endblock %}
{% endblock %}
